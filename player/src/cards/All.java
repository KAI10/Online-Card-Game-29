/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cards;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author KAI10
 */
public class All extends javax.swing.JFrame {

    /**
     * Creates new form All
     */
    Client cNet;
    public static int mode, gameStarter, gameCount;
    public static int setter[];
    //String Trump;
    public static boolean buttonPress, status;
    public static String singleHandCards, firstPlayedCard;
    public static javax.swing.JLabel labels[], rShowResult, rPrompt;
    public static javax.swing.JPanel repeat, rHands, rResult;
    public static javax.swing.JButton rCredit;

    public All() throws IOException, InterruptedException, ClassNotFoundException {

        super("Online Card Game");
        mode = 0;
        status = false;
        cNet = new Client();
        buttonPress = false;
        setter = new int[2];
        System.out.println(Client.player.hand[0]);
        singleHandCards = new String();
        gameCount = 0;
        labels = new javax.swing.JLabel[4];

        initComponents();

        labels[0] = myCard;
        labels[1] = Ol_card;
        labels[2] = p_card;
        labels[3] = Or_card;
        repeat = start;
        rShowResult = showResult;
        
        rHands = hands;
        rResult = result;
        rPrompt = prompt;
        rCredit = credit;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        start = new javax.swing.JPanel();
        play = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        Game = new javax.swing.JPanel();
        p_panel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        my_panel = new javax.swing.JPanel();
        credit = new javax.swing.JButton();
        card1 = new javax.swing.JButton();
        card2 = new javax.swing.JButton();
        card3 = new javax.swing.JButton();
        card4 = new javax.swing.JButton();
        card5 = new javax.swing.JButton();
        card6 = new javax.swing.JButton();
        card7 = new javax.swing.JButton();
        card8 = new javax.swing.JButton();
        O1_panel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        O2_panel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        common_panel = new javax.swing.JPanel();
        call = new javax.swing.JPanel();
        callBox = new javax.swing.JComboBox();
        Begin = new javax.swing.JButton();
        trumpSet = new javax.swing.JPanel();
        spade = new javax.swing.JButton();
        dice = new javax.swing.JButton();
        clubs = new javax.swing.JButton();
        hearts = new javax.swing.JButton();
        hands = new javax.swing.JPanel();
        myCard = new javax.swing.JLabel();
        Or_card = new javax.swing.JLabel();
        p_card = new javax.swing.JLabel();
        Ol_card = new javax.swing.JLabel();
        OurPoint = new javax.swing.JLabel();
        target = new javax.swing.JLabel();
        prompt = new javax.swing.JLabel();
        result = new javax.swing.JPanel();
        showResult = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        start.setBackground(new java.awt.Color(51, 51, 51));

        play.setBackground(new java.awt.Color(204, 204, 204));
        play.setText("Play");
        play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Online Card Game");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Please read the instructions (provided in Instruction.docx) before playing");

        javax.swing.GroupLayout startLayout = new javax.swing.GroupLayout(start);
        start.setLayout(startLayout);
        startLayout.setHorizontalGroup(
            startLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(startLayout.createSequentialGroup()
                .addGroup(startLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(startLayout.createSequentialGroup()
                        .addGap(414, 414, 414)
                        .addComponent(play, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(startLayout.createSequentialGroup()
                        .addGap(353, 353, 353)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(startLayout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(jLabel17)))
                .addContainerGap(220, Short.MAX_VALUE))
        );
        startLayout.setVerticalGroup(
            startLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, startLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(156, 156, 156)
                .addComponent(play, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 198, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addGap(141, 141, 141))
        );

        getContentPane().add(start, "card2");

        Game.setPreferredSize(new java.awt.Dimension(825, 720));
        Game.setLayout(new java.awt.BorderLayout());

        p_panel.setBackground(new java.awt.Color(255, 255, 204));
        p_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/PB.png"))); // NOI18N
        p_panel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, -1, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/PB.png"))); // NOI18N
        p_panel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 0, -1, -1));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/PB.png"))); // NOI18N
        p_panel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, -1, -1));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/PB.png"))); // NOI18N
        p_panel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        jLabel13.setText("Partner");
        p_panel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 40, 120, -1));

        Game.add(p_panel, java.awt.BorderLayout.PAGE_START);

        my_panel.setBackground(new java.awt.Color(255, 255, 204));
        my_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        credit.setText("Credit");
        credit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditActionPerformed(evt);
            }
        });
        my_panel.add(credit, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 50, -1, -1));

        card1.setPreferredSize(new java.awt.Dimension(90, 135));
        card1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card1ActionPerformed(evt);
            }
        });
        my_panel.add(card1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 0, -1, -1));

        card2.setPreferredSize(new java.awt.Dimension(90, 135));
        card2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card2ActionPerformed(evt);
            }
        });
        my_panel.add(card2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 0, -1, -1));

        card3.setPreferredSize(new java.awt.Dimension(90, 135));
        card3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card3ActionPerformed(evt);
            }
        });
        my_panel.add(card3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 0, -1, -1));

        card4.setPreferredSize(new java.awt.Dimension(90, 135));
        card4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card4ActionPerformed(evt);
            }
        });
        my_panel.add(card4, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 0, -1, -1));

        card5.setPreferredSize(new java.awt.Dimension(90, 135));
        card5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card5ActionPerformed(evt);
            }
        });
        my_panel.add(card5, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 0, -1, -1));

        card6.setPreferredSize(new java.awt.Dimension(90, 135));
        card6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card6ActionPerformed(evt);
            }
        });
        my_panel.add(card6, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 0, -1, -1));

        card7.setPreferredSize(new java.awt.Dimension(90, 135));
        card7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card7ActionPerformed(evt);
            }
        });
        my_panel.add(card7, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 0, -1, -1));

        card8.setPreferredSize(new java.awt.Dimension(90, 135));
        card8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card8ActionPerformed(evt);
            }
        });
        my_panel.add(card8, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, -1, -1));

        Game.add(my_panel, java.awt.BorderLayout.PAGE_END);

        O1_panel.setBackground(new java.awt.Color(255, 255, 153));
        O1_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/OB.png"))); // NOI18N
        O1_panel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/OB.png"))); // NOI18N
        O1_panel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/OB.png"))); // NOI18N
        O1_panel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/OB.png"))); // NOI18N
        O1_panel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 2, 22)); // NOI18N
        jLabel14.setText("Opponent");
        O1_panel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 110, 40));

        Game.add(O1_panel, java.awt.BorderLayout.LINE_END);

        O2_panel.setBackground(new java.awt.Color(255, 255, 153));
        O2_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/OB.png"))); // NOI18N
        O2_panel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/OB.png"))); // NOI18N
        O2_panel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/OB.png"))); // NOI18N
        O2_panel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/OB.png"))); // NOI18N
        O2_panel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 2, 22)); // NOI18N
        jLabel15.setText("Opponent");
        O2_panel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 110, 40));

        Game.add(O2_panel, java.awt.BorderLayout.LINE_START);

        common_panel.setBackground(new java.awt.Color(153, 255, 153));
        common_panel.setLayout(new java.awt.CardLayout());

        call.setBackground(new java.awt.Color(204, 255, 153));

        callBox.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        callBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "pass", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28" }));
        callBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                callBoxActionPerformed(evt);
            }
        });

        Begin.setText("Start");
        Begin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BeginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout callLayout = new javax.swing.GroupLayout(call);
        call.setLayout(callLayout);
        callLayout.setHorizontalGroup(
            callLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(callLayout.createSequentialGroup()
                .addGap(302, 302, 302)
                .addGroup(callLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(Begin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(callBox, 0, 91, Short.MAX_VALUE))
                .addContainerGap(327, Short.MAX_VALUE))
        );
        callLayout.setVerticalGroup(
            callLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(callLayout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(callBox, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(Begin, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(148, Short.MAX_VALUE))
        );

        common_panel.add(call, "card2");

        trumpSet.setLayout(new java.awt.GridLayout(1, 0));

        spade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/S2.png"))); // NOI18N
        spade.setMaximumSize(new java.awt.Dimension(180, 265));
        spade.setMinimumSize(new java.awt.Dimension(180, 265));
        spade.setPreferredSize(new java.awt.Dimension(180, 265));
        spade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spadeActionPerformed(evt);
            }
        });
        trumpSet.add(spade);

        dice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/D2.png"))); // NOI18N
        dice.setMaximumSize(new java.awt.Dimension(180, 265));
        dice.setMinimumSize(new java.awt.Dimension(180, 265));
        dice.setPreferredSize(new java.awt.Dimension(180, 265));
        dice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diceActionPerformed(evt);
            }
        });
        trumpSet.add(dice);

        clubs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/C2.png"))); // NOI18N
        clubs.setMaximumSize(new java.awt.Dimension(180, 265));
        clubs.setMinimumSize(new java.awt.Dimension(180, 265));
        clubs.setPreferredSize(new java.awt.Dimension(180, 265));
        clubs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clubsActionPerformed(evt);
            }
        });
        trumpSet.add(clubs);

        hearts.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/H2.png"))); // NOI18N
        hearts.setMaximumSize(new java.awt.Dimension(180, 265));
        hearts.setMinimumSize(new java.awt.Dimension(180, 265));
        hearts.setPreferredSize(new java.awt.Dimension(180, 265));
        hearts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heartsActionPerformed(evt);
            }
        });
        trumpSet.add(hearts);

        common_panel.add(trumpSet, "card3");

        hands.setBackground(new java.awt.Color(153, 153, 255));

        myCard.setPreferredSize(new java.awt.Dimension(90, 135));

        Or_card.setPreferredSize(new java.awt.Dimension(90, 135));

        p_card.setBackground(new java.awt.Color(255, 255, 255));
        p_card.setPreferredSize(new java.awt.Dimension(90, 135));

        Ol_card.setPreferredSize(new java.awt.Dimension(90, 135));

        OurPoint.setBackground(new java.awt.Color(255, 153, 153));
        OurPoint.setFont(new java.awt.Font("Comic Sans MS", 2, 24)); // NOI18N
        OurPoint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        target.setFont(new java.awt.Font("Tahoma", 3, 16)); // NOI18N

        prompt.setFont(new java.awt.Font("Tahoma", 3, 20)); // NOI18N

        javax.swing.GroupLayout handsLayout = new javax.swing.GroupLayout(hands);
        hands.setLayout(handsLayout);
        handsLayout.setHorizontalGroup(
            handsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(handsLayout.createSequentialGroup()
                .addGroup(handsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(handsLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(OurPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(handsLayout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(Ol_card, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(handsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(handsLayout.createSequentialGroup()
                                .addComponent(p_card, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(Or_card, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(handsLayout.createSequentialGroup()
                                .addGroup(handsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(myCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(prompt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                                .addComponent(target, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        handsLayout.setVerticalGroup(
            handsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(handsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(OurPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(handsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(handsLayout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(Ol_card, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(handsLayout.createSequentialGroup()
                        .addComponent(p_card, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(myCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(handsLayout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(Or_card, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(handsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(target, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prompt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        common_panel.add(hands, "card4");

        showResult.setBackground(new java.awt.Color(204, 204, 204));
        showResult.setFont(new java.awt.Font("Comic Sans MS", 3, 48)); // NOI18N

        javax.swing.GroupLayout resultLayout = new javax.swing.GroupLayout(result);
        result.setLayout(resultLayout);
        resultLayout.setHorizontalGroup(
            resultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(showResult, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        resultLayout.setVerticalGroup(
            resultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(showResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        common_panel.add(result, "card5");

        Game.add(common_panel, java.awt.BorderLayout.CENTER);

        getContentPane().add(Game, "card3");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playActionPerformed
        
        //reset();
        credit.setEnabled(false);
        credit.setVisible(false);
        start.setVisible(false);
        start.setEnabled(false);
        Game.setVisible(true);
        Game.setEnabled(true);
        callBox.setEnabled(false);

        showcards();

        try {
            callManage();  //activate callBox
        } catch (IOException | InterruptedException | ClassNotFoundException ex) {
            Logger.getLogger(All.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_playActionPerformed

    private void callBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_callBoxActionPerformed
        // TODO add your handling code here:
        int x = callBox.getSelectedIndex();

        if (x != 0) {
            x = Integer.parseInt((String) callBox.getItemAt(x));
        }

        try {
            cNet.write((Integer) x);
        } catch (IOException ex) {
            Logger.getLogger(All.class.getName()).log(Level.SEVERE, null, ex);
        }

        callBox.setVisible(false);
        callBox.setEnabled(false);

        Begin.setVisible(true);
        Begin.setEnabled(true);
    }//GEN-LAST:event_callBoxActionPerformed

    private void BeginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BeginActionPerformed
        // TODO add your handling code here:

        while (status == false) {
            try {
                Thread.sleep(10);
            } catch (InterruptedException ex) {
                Logger.getLogger(All.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        status = false;
            //setter = (int[]) cNet.read();

        System.out.println("After read");
        System.out.println("player " + setter[0] + " call " + setter[1] + " ");

        call.setVisible(false);
        call.setEnabled(false);

        if (Client.id == setter[0]) {

            trumpSet.setVisible(true);
            trumpSet.setEnabled(true);
        } else {
            hands.setVisible(true);
            hands.setEnabled(true);
            
            Client.player.sortHand();
            showAllCards();
        }
    }//GEN-LAST:event_BeginActionPerformed

    private void spadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spadeActionPerformed
        // TODO add your handling code here:
        try {
            cNet.write("S2");
        } catch (IOException ex) {
            Logger.getLogger(All.class.getName()).log(Level.SEVERE, null, ex);
        }

        trumpSet.setVisible(false);
        trumpSet.setEnabled(false);

        hands.setVisible(true);
        hands.setEnabled(true);

        Client.player.sortHand();
        showAllCards();

    }//GEN-LAST:event_spadeActionPerformed

    private void diceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diceActionPerformed
        // TODO add your handling code here:
        try {
            cNet.write("D2");
        } catch (IOException ex) {
            Logger.getLogger(All.class.getName()).log(Level.SEVERE, null, ex);
        }

        trumpSet.setVisible(false);
        trumpSet.setEnabled(false);

        hands.setVisible(true);
        hands.setEnabled(true);

        Client.player.sortHand();
        showAllCards();


    }//GEN-LAST:event_diceActionPerformed

    private void clubsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clubsActionPerformed
        // TODO add your handling code here:
        try {
            cNet.write("C2");
        } catch (IOException ex) {
            Logger.getLogger(All.class.getName()).log(Level.SEVERE, null, ex);
        }

        trumpSet.setVisible(false);
        trumpSet.setEnabled(false);

        hands.setVisible(true);
        hands.setEnabled(true);

        Client.player.sortHand();
        showAllCards();


    }//GEN-LAST:event_clubsActionPerformed

    private void heartsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heartsActionPerformed
        // TODO add your handling code here:
        try {
            cNet.write("H2");
        } catch (IOException ex) {
            Logger.getLogger(All.class.getName()).log(Level.SEVERE, null, ex);
        }

        trumpSet.setVisible(false);
        trumpSet.setEnabled(false);

        hands.setVisible(true);
        hands.setEnabled(true);

        Client.player.sortHand();
        showAllCards();
    }//GEN-LAST:event_heartsActionPerformed

    private void card1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card1ActionPerformed
        // TODO add your handling code here:
        if (!buttonPress) {
        } 
        else if (checkPlayable (Client.player.hand[0])){
            OurPoint.setText(null);
            if (firstPlayedCard == null) firstPlayedCard = Client.player.hand[0];
            buttonPress = false;
            
            labels[0].setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/" + Client.player.hand[0] + ".png")));
            try {
                cNet.write(Client.player.hand[0]);
            } catch (IOException ex) {
                Logger.getLogger(All.class.getName()).log(Level.SEVERE, null, ex);
            }
            Client.player.hand[0] = null;
            card1.setEnabled(false);
            card1.setVisible(false);
        }
        
        else{
            OurPoint.setText("Sorry you can't play this card. Please follow suite.");
        }

    }//GEN-LAST:event_card1ActionPerformed

    private void card2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card2ActionPerformed
        // TODO add your handling code here:
        if (!buttonPress) {
        } 
        else if (checkPlayable (Client.player.hand[1])){
            
            OurPoint.setText(null);
            if (firstPlayedCard == null) firstPlayedCard = Client.player.hand[1];
            
            buttonPress = false;

            labels[0].setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/" + Client.player.hand[1] + ".png")));
            try {
                cNet.write(Client.player.hand[1]);
            } catch (IOException ex) {
                Logger.getLogger(All.class.getName()).log(Level.SEVERE, null, ex);
            }
            Client.player.hand[1] = null;
            card2.setEnabled(false);
            card2.setVisible(false);
        }
        else{
            OurPoint.setText("Sorry you can't play this card. Please follow suite.");
        }
    }//GEN-LAST:event_card2ActionPerformed

    private void card3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card3ActionPerformed
        // TODO add your handling code here:
        if (!buttonPress) {
        } 
        else if (checkPlayable (Client.player.hand[2])){
            
            OurPoint.setText(null);
            if (firstPlayedCard == null) firstPlayedCard = Client.player.hand[2];
            buttonPress = false;

            labels[0].setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/" + Client.player.hand[2] + ".png")));
            try {
                cNet.write(Client.player.hand[2]);
            } catch (IOException ex) {
                Logger.getLogger(All.class.getName()).log(Level.SEVERE, null, ex);
            }
            Client.player.hand[2] = null;
            card3.setEnabled(false);
            card3.setVisible(false);
        }
        else{
            OurPoint.setText("Sorry you can't play this card. Please follow suite.");
        }
    }//GEN-LAST:event_card3ActionPerformed

    private void card4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card4ActionPerformed
        // TODO add your handling code here:
        if (!buttonPress) {
        } 
        else if (checkPlayable (Client.player.hand[3])){
            
            OurPoint.setText(null);
            if (firstPlayedCard == null) firstPlayedCard = Client.player.hand[3];
            buttonPress = false;

            labels[0].setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/" + Client.player.hand[3] + ".png")));
            try {
                cNet.write(Client.player.hand[3]);
            } catch (IOException ex) {
                Logger.getLogger(All.class.getName()).log(Level.SEVERE, null, ex);
            }
            Client.player.hand[3] = null;
            card4.setEnabled(false);
            card4.setVisible(false);
        }
        else{
            OurPoint.setText("Sorry you can't play this card. Please follow suite.");
        }
    }//GEN-LAST:event_card4ActionPerformed

    private void card5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card5ActionPerformed
        // TODO add your handling code here:
        if (!buttonPress) {
        } 
        else if (checkPlayable (Client.player.hand[4])){
            
            OurPoint.setText(null);
            if (firstPlayedCard == null) firstPlayedCard = Client.player.hand[4];
            buttonPress = false;

            labels[0].setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/" + Client.player.hand[4] + ".png")));
            try {
                cNet.write(Client.player.hand[4]);
            } catch (IOException ex) {
                Logger.getLogger(All.class.getName()).log(Level.SEVERE, null, ex);
            }
            Client.player.hand[4] = null;
            card5.setEnabled(false);
            card5.setVisible(false);
        }
        else{
            OurPoint.setText("Sorry you can't play this card. Please follow suite.");
        }
    }//GEN-LAST:event_card5ActionPerformed

    private void card6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card6ActionPerformed
        // TODO add your handling code here:
        if (!buttonPress) {
        } 
        else if (checkPlayable (Client.player.hand[5])){
            
            OurPoint.setText(null);
            if (firstPlayedCard == null) firstPlayedCard = Client.player.hand[5];
            buttonPress = false;

            labels[0].setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/" + Client.player.hand[5] + ".png")));
            try {
                cNet.write(Client.player.hand[5]);
            } catch (IOException ex) {
                Logger.getLogger(All.class.getName()).log(Level.SEVERE, null, ex);
            }
            Client.player.hand[5] = null;
            card6.setEnabled(false);
            card6.setVisible(false);
        }
        else{
            OurPoint.setText("Sorry you can't play this card. Please follow suite.");
        }
    }//GEN-LAST:event_card6ActionPerformed

    private void card7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card7ActionPerformed
        // TODO add your handling code here:
        if (!buttonPress) {
        } 
        else if (checkPlayable (Client.player.hand[6])){
            
            OurPoint.setText(null);
            if (firstPlayedCard == null) firstPlayedCard = Client.player.hand[6];
            buttonPress = false;

            labels[0].setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/" + Client.player.hand[6] + ".png")));
            try {
                cNet.write(Client.player.hand[6]);
            } catch (IOException ex) {
                Logger.getLogger(All.class.getName()).log(Level.SEVERE, null, ex);
            }
            Client.player.hand[6] = null;
            card7.setEnabled(false);
            card7.setVisible(false);
        }
        else{
            OurPoint.setText("Sorry you can't play this card. Please follow suite.");
        }
    }//GEN-LAST:event_card7ActionPerformed

    private void card8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card8ActionPerformed
        // TODO add your handling code here:
        if (!buttonPress) {
        } 
        else if (checkPlayable (Client.player.hand[7])){
            
            OurPoint.setText(null);
            if (firstPlayedCard == null) firstPlayedCard = Client.player.hand[7];
            buttonPress = false;

            labels[0].setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/" + Client.player.hand[7] + ".png")));
            try {
                cNet.write(Client.player.hand[7]);
            } catch (IOException ex) {
                Logger.getLogger(All.class.getName()).log(Level.SEVERE, null, ex);
            }
            Client.player.hand[7] = null;
            card8.setEnabled(false);
            card8.setVisible(false);
        }
        else{
            OurPoint.setText("Sorry you can't play this card. Please follow suite.");
        }
    }//GEN-LAST:event_card8ActionPerformed

    private void creditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditActionPerformed
        // TODO add your handling code here:
        credit.setEnabled(false);
        credit.setVisible(false);
        
        Credit cred = new Credit();
        cred.setVisible(true);
        cred.setEnabled(true);
    }//GEN-LAST:event_creditActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(All.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(All.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(All.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(All.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new All().setVisible(true);
                } catch (IOException | InterruptedException | ClassNotFoundException ex) {
                    Logger.getLogger(All.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Begin;
    private javax.swing.JPanel Game;
    private javax.swing.JPanel O1_panel;
    private javax.swing.JPanel O2_panel;
    private javax.swing.JLabel Ol_card;
    private javax.swing.JLabel Or_card;
    private javax.swing.JLabel OurPoint;
    private javax.swing.JPanel call;
    private javax.swing.JComboBox callBox;
    private javax.swing.JButton card1;
    private javax.swing.JButton card2;
    private javax.swing.JButton card3;
    private javax.swing.JButton card4;
    private javax.swing.JButton card5;
    private javax.swing.JButton card6;
    private javax.swing.JButton card7;
    private javax.swing.JButton card8;
    private javax.swing.JButton clubs;
    private javax.swing.JPanel common_panel;
    private javax.swing.JButton credit;
    private javax.swing.JButton dice;
    private javax.swing.JPanel hands;
    private javax.swing.JButton hearts;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel myCard;
    private javax.swing.JPanel my_panel;
    private javax.swing.JLabel p_card;
    private javax.swing.JPanel p_panel;
    private javax.swing.JButton play;
    private javax.swing.JLabel prompt;
    private javax.swing.JPanel result;
    private javax.swing.JLabel showResult;
    private javax.swing.JButton spade;
    private javax.swing.JPanel start;
    private javax.swing.JLabel target;
    private javax.swing.JPanel trumpSet;
    // End of variables declaration//GEN-END:variables

    private void showcards() {
        System.out.println("HAND: " +Client.player.hand[0] + " " + Client.player.hand[1] + " " +Client.player.hand[2] + " " +Client.player.hand[3] + " ");
        card1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/" + Client.player.hand[0] + ".png")));
        card2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/" + Client.player.hand[1] + ".png")));
        card3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/" + Client.player.hand[2] + ".png")));
        card4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/" + Client.player.hand[3] + ".png")));

    }

    private void callManage() throws IOException, InterruptedException, ClassNotFoundException {
        /*mode = 2;
         while (status == false){
         try {
         Thread.sleep(10);
         } catch (InterruptedException ex) {
         Logger.getLogger(All.class.getName()).log(Level.SEVERE, null, ex);
         }
         }
         System.out.println("Came here");
         status = false;*/
        //cNet.firstCaller = (int) cNet.read();
        System.out.println("callstarter " + Client.firstCaller);

        if (Client.id == Client.firstCaller) {
            callBox.setEnabled(true);
            mode = 4;
        } else {
            while (status == false) {
                try {
                    Thread.sleep(10);
                } catch (InterruptedException ex) {
                    Logger.getLogger(All.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            status = false;

            //cNet.player.currentCall = (int) cNet.read();
            for (int i = 16; i <= Client.player.currentCall; i++) {
                callBox.removeItemAt(1);
            }
            callBox.setEnabled(true);
        }
    }

    private void showAllCards() {

        if(setter[0] == Client.id) target.setText("Your Call: " + setter[1]);
        else if((setter[0] - Client.id)%2 == 0) target.setText("Partner's Call: " + setter[1]);
        else target.setText("Opponent's Call: " + setter[1]);
        
        card1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/" + Client.player.hand[0] + ".png")));
        card2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/" + Client.player.hand[1] + ".png")));
        card3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/" + Client.player.hand[2] + ".png")));
        card4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/" + Client.player.hand[3] + ".png")));
        card5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/" + Client.player.hand[4] + ".png")));
        card6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/" + Client.player.hand[5] + ".png")));
        card7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/" + Client.player.hand[6] + ".png")));
        card8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/Images/" + Client.player.hand[7] + ".png")));
    }
    
    boolean checkPlayable(String card){
        if (firstPlayedCard == null) return true;
        if (card.charAt(0) == firstPlayedCard.charAt(0)) return true;
        for (int i = 0; i<8; i++){
            if (Client.player.hand[i] == null) continue;
            if (Client.player.hand[i].charAt(0) == firstPlayedCard.charAt(0)) return false;
        }
        return true;
    }

    /*public void reset() {  //tried to repeat the game, but couldn't finish due to read/write problems
        card1.setIcon(null);
        card1.setEnabled(true);
        card1.setVisible(true);

        card2.setIcon(null);
        card2.setEnabled(true);
        card2.setVisible(true);

        card3.setIcon(null);
        card3.setEnabled(true);
        card3.setVisible(true);

        card4.setIcon(null);
        card4.setEnabled(true);
        card4.setVisible(true);

        card5.setIcon(null);
        card5.setEnabled(true);
        card5.setVisible(true);

        card6.setIcon(null);
        card6.setEnabled(true);
        card6.setVisible(true);

        card7.setIcon(null);
        card7.setEnabled(true);
        card7.setVisible(true);

        card8.setIcon(null);
        card8.setEnabled(true);
        card8.setVisible(true);

        for (int i = Client.player.currentCall; i >= 16; i--) {
            callBox.insertItemAt(Integer.toString(i), 1);
        }
        
        //callBox.setVisible(true);
        
        call.setEnabled(true);
        call.setVisible(true);
        
        hands.setVisible(false);
        hands.setEnabled(false);
    }*/
}
